moviebookingapp{


  include "movieregistration"
  include "moviereservation"

  persistent-entity-timeout = "60s"
  persistent-entity-timeout = ${?PERSISTENT_ENTITY_TIMEOUT}
  
  akka {
    loglevel = INFO
    loggers = ["akka.event.slf4j.Slf4jLogger"]

    persistence{
      journal.plugin = "cassandra-journal"
      snapshot-store.plugin = "cassandra-snapshot-store"
    }
            
    actor{
      serializers{
        json = "com.ayon.movieservice.common.JsonSerializer"
        proto = "akka.remote.serialization.ProtobufSerializer"
      }
      serialization-bindings {
        "com.google.protobuf.AbstractMessage" = proto
        "com.ayon.movieservice.common.EntityFieldsObject" = json
      }      
    }
  }

  serviceBoots = ["MovieRegistration","MovieReservation"]



  elasticsearch {
    host = "elasticsearch"
    host=  ${?ELASTICSEARCH_HOST}
    port = 9200
    port = ${?ELASTICSEARCH_PORT}
  }

  cassandra {
    host = "cassandra"
    host = ${?CASSANDRA_HOST}
    port = 9042
    port = ${?CASSANDRA_PORT}
    number-of-retries = 500
  }
  
  cassandra-journal{
    contact-points = [${moviebookingapp.cassandra.host}]
    port = ${moviebookingapp.cassandra.port}
    event-adapters{
      proto = "com.ayon.movieservice.common.MovieServiceDatamodelAdapter"
    }
    
    event-adapter-bindings{
      "com.ayon.movieservice.common.EntityEvent" = proto
      "com.google.protobuf.Message" = proto
    }
  } 

  cassandra-snapshot-store {
    contact-points = [${moviebookingapp.cassandra.host}]
    port = ${moviebookingapp.cassandra.port}
  }  

  cassandra-query-journal {
    refresh-interval = 500ms
    max-buffer-size = 100
    max-result-size-query = 100
  }  
}
myApiFilmsUrl = "http://www.myapifilms.com/imdb/idIMDB?idIMDB="
myApiFilmsToken ="d0ef2265-170f-434b-8f6c-887c956d5a75"
